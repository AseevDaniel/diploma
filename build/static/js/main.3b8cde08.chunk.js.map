{"version":3,"sources":["hooks/reduxHooks.ts","hooks/useAuth.ts","interfaces/User.ts","pages/HomePage.tsx","constants/RegExps.ts","components/Auth/Form.tsx","store/slices/userSlice.ts","components/Auth/Login.tsx","pages/LoginPage.tsx","interfaces/RequestStatus.ts","firebase.ts","services/firebaseDataService.ts","services/userService.ts","components/Auth/SignUp.tsx","pages/RegisterPage.tsx","services/sessionService.ts","components/Loader/Loader.tsx","constants/date.ts","components/CustomDatePicker.tsx","helpers/dateHelpers.ts","pages/SessionPage/components/CreateSession/CreateSession.tsx","components/Modal/Modal.tsx","pages/SessionPage/components/Sessions/sessionsService.ts","pages/SessionPage/components/Sessions/components/TimeslotsTags/TimeslotTags.tsx","pages/SessionPage/components/Sessions/components/CalendarDayCell.tsx","pages/SessionPage/components/Sessions/components/WeekDays.tsx","pages/SessionPage/components/Sessions/components/MonthSelect.tsx","constants/images.ts","components/Modal/ConfirmModal.tsx","pages/SessionPage/components/Sessions/components/CurrentSession/CurrentSession.tsx","pages/SessionPage/components/Sessions/Sessions.tsx","pages/SessionPage/components/Filters/Filters.tsx","helpers/userHelpers.tsx","helpers/sessionHelper.ts","pages/SessionPage/components/CreateSchedule/CreateSchedule.tsx","pages/SessionPage/SessionsPage.tsx","pages/ProfilePage.tsx","components/PrivateRoute.tsx","components/Layout/Menu.tsx","components/Layout/ProfileSection.tsx","components/Layout/Header.tsx","App.tsx","store/index.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","useAuth","state","userReducer","email","token","isAuth","id","UserRoles","HomePage","to","REG_EXP","phone","Form","handleClick","isRegister","useForm","getValues","register","handleSubmit","errors","formState","useEffect","console","log","onSubmit","data","type","required","value","message","pattern","minLength","password","validate","passwordRepeat","userSlice","createSlice","name","initialState","reducers","setUser","action","payload","removeUser","actions","Login","dispatch","push","useHistory","user","auth","getAuth","signInWithEmailAndPassword","then","uid","refreshToken","catch","alert","LoginPage","RequestStatuses","app","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","db","getFirestore","database","getDatabase","getData","collectionName","getDocs","collection","querySnapshot","postData","addDoc","postArrayData","arrayOfPromises","forEach","el","Promise","all","updateData","documentId","updateDoc","doc","getDatabaseData","path","onGet","dataRef","ref","onValue","snapshot","val","USER_PATH","writeUserData","set","err","getAllUsers","SignUp","createUserWithEmailAndPassword","role","error","RegisterPage","SESSION_PATH","getSessions","sessionsSnapshot","sessions","createSession","updateSession","sessionId","getSessionsByOwners","ownerUids","length","filteredSessions","filter","session","ownerUid","includes","Loader","size","style","className","isWithoutCentering","loaderWrapperClasses","classNames","centeredLoader","loaderClasses","DATE_FORMATS","CustomDatePicker","control","onChangeData","defaultValue","moment","otherProps","render","field","dateFormat","DATE_PICKER_DATE_TIME","showTimeSelect","timeFormat","DEFAULT_TIME","timeIntervals","selected","Date","format","DEFAULT_DATE_TIME","onChange","date","convertDateToDefaultFormat","CreateSession","onCreate","setValue","useContext","AuthContext","useState","reqStatus","setReqStatus","PENDING","sessionData","startDate","endDate","isAvailable","sessionsCreated","SUCCESS","FAILED","address","add","start","isSame","isAfter","subtract","Modal","onClose","title","isLoading","children","modalClasses","onClick","generate","now","startDay","clone","startOf","endDay","endOf","calendar","isBefore","active","disabled","past","TimeslotTags","timeslots","currentSession","setCurrentSession","isDisabled","filteredTimeslots","sort","a","b","diff","getTime","timeslot","end","getClassNames","index","allLength","isItemSelected","isItemDisabled","map","CalendarDayCell","day","setDate","isWithAvailable","isUnavailable","every","additionalText","WEEK_DAYS_IDS","WeekDays","i","weekday","MonthSelect","currentDate","setCurrentDate","moveCurrentMonth","evt","moveTo","newMonthDate","createArrowButton","direction","toRight","isButtonDisabled","PROFILE_IMAGE","ConfirmModal","onConfirm","description","modalProps","CurrentSession","onReserve","isWithoutBooking","setIsLoading","isConfirmModalOpen","setIsConfirmModalOpen","checkUserData","reserveSession","sessionsAccepted","onSessionReserve","client","DATE_FOR_SLOT","src","alt","Sessions","onDataUpdate","currentCalendarDay","setCurrentCalendarDay","slot","undefined","find","isOnlyFreeSlots","setIsOnlyFreeSlots","Filters","selectedUsers","setSelectedUsers","users","setUsers","formattedUsers","Object","values","STORE","ADMIN","label","options","isMulti","isUserCanManageSession","getArrayOfSessions","sessionValue","startTime","endTime","duration","otherSession","startDateValue","DEFAULT_DATE","startTimeMinutes","getTimeInMinutes","sessionsPerDay","daysCount","d","getMinutesInTime","getSessionsForToday","time","Number","slice","minutesValue","minutes","Math","round","String","CreateSchedule","sessionSchedule","arrayOfSessions","event","target","min","max","DATE_FOR_SCHEDULE","SessionsPage","setSessions","selectedOwners","setSelectedOwners","isCreateSessionModalOpen","setIsCreateSessionModalOpen","isCreateScheduleModalOpen","setIsCreateScheduleModalOpen","getSession","formattedOwners","ProfilePage","isCreateModalOpen","setIsCreateModalOpen","isUserDataLoading","setIsUserDataLoading","isCreatingLoading","setCreatingLoading","isSessionsForTodayShown","setIsSessionsForTodayShown","isEditing","setIsEditing","isAdmin","currentSessions","getCurrentDataDisplay","finally","PrivateRoute","Component","component","rest","routeProps","pathname","from","location","Menu","useLocation","filteredRoutes","route","isSensitive","array","Fragment","getSliderBarClasses","ProfileSection","userData","Header","createContext","App","setUserData","Provider","exact","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","thunk","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3b8cde08.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useAppSelector } from './reduxHooks';\n\nexport function useAuth() {\n    const {email, token, id} = useAppSelector(state => state.userReducer);\n\n    return {\n        isAuth: !!token,\n        email,\n        token,\n        id,\n    };\n}","import { Session } from \"./Session\";\n\ntype email = string;\ntype password = string;\ntype name = string;\ntype phone = string;\ntype address = string;\nexport type userUid = string;\n\nexport enum UserRoles {\n  ADMIN = \"admin\",\n  STORE = \"store\",\n  DEFAULT = \"default\",\n}\nexport type UserRole = \"admin\" | \"store\" | \"default\";\n\nexport interface User {\n  email: email;\n  password: password;\n  passwordRepeat?: password;\n}\n\nexport interface UserWithData {\n  email: email;\n  uid: userUid;\n  role: UserRole;\n  name?: name;\n  phone?: phone;\n  address?: address;\n  sessionsCreated?: Session[];\n  sessionsAccepted?: Session[];\n}\n\nexport interface UserForSession {\n  name: name;\n  phone: phone;\n  id?: string;\n}\n\nexport interface UsersAll {\n  [key: string]: UserWithData;\n}\n","import { Link } from \"react-router-dom\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { removeUser } from \"../store/slices/userSlice\";\nimport { useAppDispatch } from \"../hooks/reduxHooks\";\n\nconst HomePage = () => {\n  const dispatch = useAppDispatch();\n\n  const { email } = useAuth();\n\n  return (\n    <div>\n      <Link to=\"/sessions\">To session page</Link>\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const REG_EXP = {\n  email: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n  phone: /^(\\+)?((\\d{2,3}) ?\\d|\\d)(([ -]?\\d)|( ?(\\d{2,3}) ?)){5,12}\\d$/,\n};\n","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { User } from \"../../interfaces/User\";\nimport { REG_EXP } from \"../../constants/RegExps\";\n\ninterface FormProps {\n  handleClick: (user: User) => void;\n  isRegister?: boolean;\n}\n\nconst Form: React.FC<FormProps> = ({ handleClick, isRegister = false }) => {\n  const {\n    getValues,\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<User>();\n\n  const onSubmit = (data: User) => {\n    handleClick(data);\n  };\n  useEffect(() => {\n    console.log(errors);\n  }, [errors]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <p>Email</p>\n        <input\n          type=\"email\"\n          {...register(\"email\", {\n            required: {\n              value: true,\n              message: \"This field is required\",\n            },\n            pattern: {\n              value: REG_EXP.email,\n              message: \"invalid email address\",\n            },\n          })}\n        />\n        <span>{errors.email?.message}</span>\n        <br />\n\n        <p>Password</p>\n        <input\n          type=\"password\"\n          {...register(\"password\", {\n            required: {\n              value: true,\n              message: \"This field is required\",\n            },\n            minLength: {\n              value: 6,\n              message: \"Password must have at least 6 characters\",\n            },\n          })}\n        />\n        <span>{errors.password?.message}</span>\n        <br />\n\n        {isRegister && (\n          <>\n            <p>Repeat Password</p>\n            <input\n              type=\"password\"\n              {...register(\"passwordRepeat\", {\n                validate: (value) =>\n                  value === getValues(\"password\") ||\n                  \"The passwords do not match\",\n              })}\n            />\n            <span>{errors.passwordRepeat?.message}</span>\n          </>\n        )}\n        <br />\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport { Form };\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst initialState = {\n    email: null,\n    token: null,\n    id: null,\n};\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUser(state, action) {\n            state.email = action.payload.email;\n            state.token = action.payload.token;\n            state.id = action.payload.id;\n        },\n        removeUser(state) {\n            state.email = null;\n            state.token = null;\n            state.id = null;\n        },\n    },\n});\n\nexport const {setUser, removeUser} = userSlice.actions;\n\nexport default userSlice.reducer;\n\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { Form } from \"./Form\";\nimport { setUser } from \"../../store/slices/userSlice\";\nimport { useAppDispatch } from \"../../hooks/reduxHooks\";\nimport { User } from \"../../interfaces/User\";\n\nconst Login: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { push } = useHistory();\n\n  const handleLogin = (user: User) => {\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, user.email, user.password)\n      .then(({ user }) => {\n        console.log(user);\n        dispatch(\n          setUser({\n            email: user.email,\n            id: user.uid,\n            token: user.refreshToken,\n          })\n        );\n        push(\"/profile\");\n      })\n      .catch(() => alert(\"Invalid user!\"));\n  };\n\n  return <Form handleClick={handleLogin} />;\n};\n\nexport { Login };\n","import { Login } from \"components/Auth/Login\";\nimport { Link } from \"react-router-dom\";\n\nexport const LoginPage = () => {\n  return (\n    <div>\n      <h1>Login</h1>\n      <Login />\n      <p>\n        Or <Link to=\"/register\">register</Link>\n      </p>\n    </div>\n  );\n};\n","export enum RequestStatuses {\n    PENDING = 'PENDING',\n    SUCCESS = 'SUCCESS',\n    FAILED = 'FAILED'\n}\n\n","import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\nexport const app = initializeApp(firebaseConfig);\n\n","import {\n  collection,\n  doc,\n  getDocs,\n  getFirestore,\n  addDoc,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { getDatabase, ref, set, onValue } from \"firebase/database\";\nimport { app } from \"firebase\";\nimport { Session } from \"../interfaces/Session\";\nconst db = getFirestore(app);\nconst database = getDatabase(app);\n\nexport const getData = async (collectionName: string) => {\n  try {\n    const querySnapshot = await getDocs(collection(db, collectionName));\n    return querySnapshot;\n  } catch (error) {\n    alert(error);\n  }\n  return [];\n};\n\nexport const postData = async <T>(collectionName: string, data: T) => {\n  try {\n    await addDoc(collection(db, collectionName), data);\n  } catch (err) {\n    alert(err);\n  }\n};\n\nexport const postArrayData = async <T>(collectionName: string, data: T[]) => {\n  const arrayOfPromises: Promise<Session>[] = [];\n\n  data.forEach((el) => {\n    arrayOfPromises.push(addDoc(collection(db, collectionName), el) as any);\n  });\n\n  try {\n    await Promise.all(arrayOfPromises);\n  } catch (err) {\n    alert(err);\n  }\n};\n\nexport const updateData = async <T>(\n  collectionName: string,\n  documentId: string,\n  data: T\n) => {\n  try {\n    await updateDoc(doc(db, collectionName, documentId), data);\n  } catch (err) {\n    alert(err);\n  }\n};\n\nexport const writeDatabaseData = <T>(path: string, uid: string, data: T) => {\n  const a = set(ref(database, path + uid), data).catch((err) => alert(err));\n\n  return a;\n};\n\nexport const getDatabaseData = (\n  path: string,\n  uid: string,\n  onGet?: (data: any) => void\n) => {\n  const dataRef = ref(database, path + uid);\n\n  onValue(dataRef, (snapshot) => {\n    const data = snapshot.val();\n    onGet?.(data);\n  });\n};\n","import { UserRoles, UsersAll, UserWithData } from \"../interfaces/User\";\nimport { getDatabaseData, writeDatabaseData } from \"./firebaseDataService\";\nimport { SelectOption } from \"../interfaces/Select\";\n\nconst USER_PATH = \"users/\";\nconst DEFAULT_USERNAME = \"Unknown\";\n\nexport const writeUserData = async (user: UserWithData) => {\n  return await writeDatabaseData(USER_PATH, user.uid, user);\n};\n\nexport const getUserData = (\n  uid: string,\n  onGet?: (data: UserWithData) => void\n) => {\n  return getDatabaseData(USER_PATH, uid, onGet);\n};\n\nexport const getAllUsers = (onGet?: (data: UsersAll) => void) => {\n  return getDatabaseData(USER_PATH, \"\", onGet);\n};\n\nexport const getUsersForFilters = (onGet: (data: SelectOption[]) => void) => {\n  const formatUsers = (data: UsersAll) => {\n    const users = Object.values(data);\n    const formattedUsers = users\n      .filter(\n        (user) => user.role === UserRoles.STORE || user.role === UserRoles.ADMIN\n      )\n      ?.map((user) => {\n        return {\n          label: user.name || DEFAULT_USERNAME,\n          value: user.uid,\n        };\n      });\n    onGet(formattedUsers || []);\n  };\n  getAllUsers(formatUsers);\n};\n\ntype UserFilter = {\n  [key in keyof Partial<UserWithData & { search: string }>]: string;\n};\n\nexport const getUsersByFilters = (\n  filters: UserFilter,\n  onGet: (data: UserWithData[]) => void\n) => {\n  const onUsersLoad = (data: UsersAll) => {\n    const users = Object.values(data);\n    console.log(users);\n\n    const filteredUsers = users.filter((user) => {\n      const filterKeys = Object.keys(filters);\n      let res = filterKeys.length > 0 ? false : true;\n\n      filterKeys.forEach((key) => {\n        if (key === \"search\") {\n          Object.values(user).forEach((field) => {\n            if (field.includes(filters[key])) {\n              res = true;\n            }\n          });\n\n          if (res) return;\n        }\n\n        if (\n          user[key as keyof UserWithData] ===\n          (filters[key as keyof UserWithData] || \"\")\n        ) {\n          res = true;\n          return;\n        }\n      });\n\n      return res;\n    });\n    onGet(filteredUsers);\n  };\n  getAllUsers(onUsersLoad);\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { Form } from \"./Form\";\nimport { setUser } from \"../../store/slices/userSlice\";\nimport { useAppDispatch } from \"../../hooks/reduxHooks\";\nimport { writeUserData } from \"../../services/userService\";\nimport { User } from \"../../interfaces/User\";\n\nconst SignUp: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { push } = useHistory();\n\n  const handleRegister = (user: User) => {\n    const auth = getAuth();\n    createUserWithEmailAndPassword(auth, user.email, user.password)\n      .then(({ user }) => {\n        console.log(user);\n        dispatch(\n          setUser({\n            email: user.email,\n            id: user.uid,\n            token: user.refreshToken,\n          })\n        );\n\n        writeUserData({\n          email: user.email!,\n          uid: user.uid,\n          role: \"default\",\n        });\n\n        push(\"/profile\");\n      })\n      .catch(console.error);\n  };\n\n  return <Form handleClick={handleRegister} isRegister />;\n};\n\nexport { SignUp };\n","import { SignUp } from 'components/Auth/SignUp';\nimport { Link } from 'react-router-dom';\n\nexport const RegisterPage = () => {\n    return (\n        <div>\n            <h1>Register</h1>\n            <SignUp />\n            <p>\n                Already have an account? <Link to=\"/login\">Sign in</Link>   \n            </p>            \n        </div>\n    )\n}\n","import {\n  getData,\n  postArrayData,\n  postData,\n  updateData,\n} from \"./firebaseDataService\";\nimport { Session, SessionSchedue } from \"../interfaces/Session\";\nimport { convertDateToDefaultFormat } from \"../helpers/dateHelpers\";\nimport { getArrayOfSessions } from \"../helpers/sessionHelper\";\nimport moment from \"moment\";\n\nconst SESSION_PATH = \"sessions\";\n\nexport const getSessions = async (): Promise<Session[]> => {\n  const sessionsSnapshot = await getData(SESSION_PATH);\n  const sessions: Session[] = [];\n\n  sessionsSnapshot.forEach((el) => {\n    sessions.push({ ...el.data(), id: el.id } as Session);\n  });\n\n  return sessions;\n};\n\nexport const createSession = (data: Session) => {\n  return postData(SESSION_PATH, data);\n};\n\nexport const createArraySession = (sessionsArray: Session[]) => {\n  return postArrayData(SESSION_PATH, sessionsArray);\n};\n\nexport const updateSession = (sessionId: string, data: Session) => {\n  return updateData(SESSION_PATH, sessionId, data);\n};\n\nexport const getSessionsByOwners = async (\n  ownerUids: string[]\n): Promise<Session[]> => {\n  const sessions = await getSessions();\n  if (!ownerUids.length) return sessions;\n\n  const filteredSessions = sessions.filter(\n    (session) => session.ownerUid && ownerUids.includes(session.ownerUid)\n  );\n\n  return filteredSessions;\n};\n\nexport const getSessionsByOwnersAndDay = async (\n  ownerUids: string[],\n  day = moment()\n): Promise<Session[]> => {\n  const sessions = await getSessionsByOwners(ownerUids);\n\n  const filteredSessions = sessions.filter((session) =>\n    moment(session.startDate).isSame(day, \"day\")\n  );\n\n  return filteredSessions;\n};\n","import classNames from 'classnames'\nimport React from 'react'\nimport './loader.scss'\n\nexport type AllSizes = 's' | 'm' | 'l' | 'xl'\n\ninterface LoaderProps {\n  size?: AllSizes\n  style?: React.CSSProperties\n  className?: string\n  isWithoutCentering?: boolean\n}\n\nexport const Loader: React.FC<LoaderProps> = ({ size = 'xl', style, className = '', isWithoutCentering }) => {\n  const loaderWrapperClasses = classNames('loaderWrapper', className, size, {\n    centeredLoader: !isWithoutCentering,\n  })\n  const loaderClasses = classNames('loader')\n\n  return (\n    <div className={loaderWrapperClasses} style={style}>\n      <div className={loaderClasses}>\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  )\n}\n","export enum DATE_FORMATS {\n  DEFAULT_DATE_TIME = \"YYYY-MM-DDTHH:mm\",\n  DEFAULT_DATE = \"YYYY-MM-DD\",\n  DEFAULT_TIME = \"HH:mm\",\n  DATE_PICKER_DATE_TIME = \"MMMM d, yyyy - HH:mm\",\n  DATE_FOR_SLOT = \"MMMM DD\",\n  DATE_FOR_SCHEDULE = \"MMMM dd\",\n}\n","import React from \"react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\nimport moment, { Moment } from \"moment\";\nimport { Control, Controller } from \"react-hook-form\";\nimport { Session, sessionDate } from \"../interfaces/Session\";\nimport { DATE_FORMATS } from \"../constants/date\";\nimport { Nullable } from \"../interfaces/HelperInterfaces\";\n\ntype SessionDates = \"startDate\" | \"endDate\";\n\ninterface CustomDatePickerProps extends ReactDatePickerProps {\n  name: SessionDates;\n  control: Control<any>;\n  onChangeData?: (value: Nullable<Date>) => void;\n  defaultValue?: Moment;\n}\n\nconst TIME_INTERVAL = 15;\n\nexport const CustomDatePicker: React.FC<CustomDatePickerProps> = ({\n  name,\n  control,\n  onChangeData,\n  defaultValue = moment(),\n  ...otherProps\n}) => {\n  return (\n    <Controller\n      name={name}\n      defaultValue={defaultValue}\n      control={control}\n      render={({ field }) => (\n        <DatePicker\n          dateFormat={DATE_FORMATS.DATE_PICKER_DATE_TIME}\n          showTimeSelect\n          timeFormat={DATE_FORMATS.DEFAULT_TIME}\n          timeIntervals={TIME_INTERVAL}\n          {...otherProps}\n          selected={\n            new Date(\n              field.value ||\n                moment(defaultValue).format(DATE_FORMATS.DEFAULT_DATE_TIME)\n            )\n          }\n          onChange={(date) => {\n            field.onChange(date);\n            onChangeData?.(date);\n          }}\n        />\n      )}\n    />\n  );\n};\n","import moment, { Moment } from \"moment\";\nimport { DATE_FORMATS } from \"../constants/date\";\n\nexport const convertDateToDefaultFormat = (\n  date: Moment | string | Date,\n  format = DATE_FORMATS.DEFAULT_DATE_TIME\n) => {\n  return moment(date).format(format);\n};\n","import React, { useContext, useState } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { Session } from \"../../../../interfaces/Session\";\nimport { createSession } from \"../../../../services/sessionService\";\nimport { Nullable } from \"../../../../interfaces/HelperInterfaces\";\nimport { Loader } from \"../../../../components/Loader/Loader\";\nimport { RequestStatuses } from \"../../../../interfaces/RequestStatus\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport { CustomDatePicker } from \"../../../../components/CustomDatePicker\";\nimport \"./createSession.scss\";\nimport { writeUserData } from \"../../../../services/userService\";\nimport { AuthContext } from \"../../../../App\";\nimport { REG_EXP } from \"../../../../constants/RegExps\";\nimport { convertDateToDefaultFormat } from \"../../../../helpers/dateHelpers\";\n\ninterface CreateSessionProps {\n  onCreate: () => void;\n}\n\nexport const CreateSession: React.FC<CreateSessionProps> = ({ onCreate }) => {\n  const {\n    control,\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    getValues,\n  } = useForm<Session>();\n  const user = useContext(AuthContext);\n  const [reqStatus, setReqStatus] = useState<Nullable<RequestStatuses>>(null);\n\n  const onStartDateChange = (date: Nullable<Date>) => {\n    if (date) setValue(\"endDate\", moment(date).add(1, \"hour\").format());\n  };\n\n  const onEndDateChange = (date: Nullable<Date>) => {\n    const start = moment(getValues(\"startDate\"));\n\n    if (!(moment(date).isSame(start, \"day\") && moment(date).isAfter(start)))\n      setValue(\"startDate\", moment(date).subtract(1, \"hour\").format());\n  };\n\n  const onSubmit: SubmitHandler<Session> = async (data) => {\n    if (user) {\n      setReqStatus(RequestStatuses.PENDING);\n      try {\n        const sessionData = {\n          ...data,\n          startDate: convertDateToDefaultFormat(data.startDate),\n          endDate: convertDateToDefaultFormat(data.endDate),\n          isAvailable: true,\n          ownerUid: user?.uid!,\n        };\n        await createSession(sessionData);\n        await writeUserData({\n          ...user,\n          sessionsCreated: [...(user?.sessionsCreated || []), sessionData],\n        });\n        setReqStatus(RequestStatuses.SUCCESS);\n      } catch (err) {\n        setReqStatus(RequestStatuses.FAILED);\n      } finally {\n        onCreate();\n      }\n    }\n  };\n\n  return (\n    <form className=\"createSessionForm\" onSubmit={handleSubmit(onSubmit)}>\n      {reqStatus === RequestStatuses.PENDING ? (\n        <Loader />\n      ) : (\n        <>\n          <div className=\"field\">\n            <p>Name</p>\n            <input\n              defaultValue={user?.name}\n              {...register(\"name\", { required: true })}\n            />\n            {errors.name && <span>This field is required</span>}\n            <br />\n          </div>\n\n          <div className=\"field\">\n            <p>Phone</p>\n            <input\n              defaultValue={user?.phone}\n              {...register(\"phone\", {\n                required: {\n                  value: true,\n                  message: \"This field is required\",\n                },\n                pattern: {\n                  value: REG_EXP.phone,\n                  message: \"Invalid phone number\",\n                },\n              })}\n            />\n            <span>{errors.phone?.message}</span>\n          </div>\n\n          <div className=\"field\">\n            <p>Adress</p>\n            <input\n              defaultValue={user?.address}\n              {...register(\"address\", { required: true })}\n            />\n            {errors.address && <span>This field is required</span>}\n          </div>\n\n          <div className=\"field\">\n            <p>Start of session</p>\n            <CustomDatePicker\n              onChange={() => {}}\n              name=\"startDate\"\n              control={control}\n              onChangeData={onStartDateChange}\n            />\n            {errors.startDate && <span>This field is required</span>}\n          </div>\n\n          <div className=\"field\">\n            <p>End of session</p>\n            <CustomDatePicker\n              defaultValue={moment().add(1, \"hour\")}\n              onChange={() => {}}\n              name=\"endDate\"\n              control={control}\n              onChangeData={onEndDateChange}\n            />\n            {errors.endDate && <span>This field is required</span>}\n          </div>\n\n          <input className=\"submitButton\" type=\"submit\" />\n        </>\n      )}\n    </form>\n  );\n};\n","import React from \"react\";\nimport \"./modal.scss\";\nimport { Loader } from \"../Loader/Loader\";\n\ntype Sizes = \"confirm\" | \"small\" | \"medium\" | \"large\";\n\nexport interface ModalProps {\n  onClose: () => void;\n  isLoading?: boolean;\n  title?: string;\n  size?: Sizes;\n}\n\nexport const Modal: React.FC<ModalProps> = ({\n  onClose,\n  title,\n  isLoading,\n  size = \"small\",\n  children,\n}) => {\n  const modalClasses = `modal modal-${size}`;\n\n  return (\n    <>\n      <div className=\"modal-mask\" />\n      <div className={modalClasses}>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            {title && <h1 className=\"title\">{title}</h1>}\n            <span className=\"close-icon\" onClick={onClose}>\n              +\n            </span>\n            {children}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import moment, { Moment } from \"moment\";\nimport { Session } from \"../../../../interfaces/Session\";\n\nexport interface CalendarDay {\n  value: Moment;\n  active: boolean;\n  disabled: boolean;\n  selected: boolean;\n  past: boolean;\n  timeslots?: Session[];\n}\n\nexport const generate = (now: Moment): CalendarDay[] => {\n  const startDay = now.clone().startOf(\"month\").startOf(\"week\");\n  const endDay = now.clone().endOf(\"month\").endOf(\"week\");\n\n  const date = startDay.clone().subtract(1, \"day\");\n\n  const calendar: CalendarDay[] = [];\n\n  while (date.isBefore(endDay, \"day\")) {\n    const value = date.add(1, \"day\").clone();\n    const active = moment().isSame(value, \"date\");\n    const disabled = !now.isSame(value, \"month\");\n    const past = value.isBefore(moment(), \"day\");\n    const selected = now.isSame(value, \"day\");\n    calendar.push({\n      value,\n      active,\n      disabled,\n      past,\n      selected,\n    });\n  }\n  return calendar;\n};\n\nexport const generateWithRemoteData = (\n  now: Moment,\n  timeslots: Session[]\n): CalendarDay[] => {\n  const plainCalendar = generate(now);\n\n  return plainCalendar.map((day) => {\n    return {\n      ...day,\n      timeslots: timeslots.filter((slot) =>\n        moment(slot.startDate).isSame(moment(day.value), \"date\")\n      ),\n    };\n  });\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport classNames from \"classnames\";\nimport { Session } from \"../../../../../../interfaces/Session\";\nimport \"./timeslotsTags.scss\";\n\ninterface TimeslotTagsProps {\n  currentSession?: Session;\n  setCurrentSession?: (timeslot: Session) => void;\n  isOnlyFreeSlots: boolean;\n  setIsOnlyFreeSlots: React.Dispatch<React.SetStateAction<boolean>>;\n  timeslots?: Session[];\n  isDisabled?: boolean;\n  tagsPerTimeslot?: number;\n}\n\nconst timeFormat = \"H:mm\";\n\nexport const TimeslotTags: React.FC<TimeslotTagsProps> = ({\n  timeslots,\n  currentSession,\n  setCurrentSession,\n  isDisabled,\n}) => {\n  console.log(timeslots);\n  const filteredTimeslots = timeslots?.sort((a, b) =>\n    moment(a.startDate).diff(moment(b.startDate))\n  );\n\n  const getTime = (timeslot: Session) => {\n    const start = moment(timeslot.startDate).format(timeFormat);\n    const end = moment(timeslot.endDate).format(timeFormat);\n\n    return `${start} - ${end}`;\n  };\n\n  const getClassNames = (\n    timeslot: Session,\n    index: number,\n    allLength?: number\n  ) => {\n    const isItemSelected = timeslot.startDate === currentSession?.startDate;\n    const isItemDisabled = isDisabled;\n\n    return classNames(\"timeslots__item\", {\n      \"timeslots__item--disabled\": isItemDisabled,\n      \"timeslots__item--selected\": isItemSelected,\n      \"timeslots__item--unavailable\": !timeslot.isAvailable,\n    });\n  };\n\n  return (\n    <div className=\"timeslotsWrapper\">\n      {filteredTimeslots?.length ? (\n        <div className=\"timeslots\">\n          {filteredTimeslots?.map((timeslot, index) => {\n            return (\n              <div\n                key={getTime(timeslot)}\n                onClick={() => setCurrentSession?.(timeslot)}\n                className={getClassNames(\n                  timeslot,\n                  index,\n                  filteredTimeslots.length\n                )}\n              >\n                <span>{getTime(timeslot)}</span>\n              </div>\n            );\n          })}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { CalendarDay } from \"../sessionsService\";\n\ninterface CalendarDayCellProps {\n  day: CalendarDay;\n  setDate: (day: CalendarDay) => void;\n  isWithAvailable?: boolean;\n  isDisabled?: boolean;\n}\n\nconst dayFormat = \"D\";\n\nexport const CalendarDayCell: React.FC<CalendarDayCellProps> = ({\n  day,\n  setDate,\n  isWithAvailable,\n  isDisabled,\n}) => {\n  const isUnavailable =\n    !day.timeslots?.length && !day.disabled && isWithAvailable;\n\n  const getDayClasses = () => {\n    return classNames(\"calendar__day\", {\n      \"calendar__day--active\": day.active,\n      \"calendar__day--selected\": day.selected,\n      \"calendar__day--disabled\": day.disabled,\n      \"calendar__day--unavailable\": isUnavailable,\n      \"calendar__day--pastDate\": day.past,\n      \"calendar__day--allDisabled\": isDisabled,\n    });\n  };\n\n  const additionalText = (day: CalendarDay) => {\n    if (day.disabled || !isWithAvailable || day.past) return;\n\n    if (!day.timeslots?.length)\n      return (\n        <>\n          <p>No slots</p>\n        </>\n      );\n\n    if (day.timeslots.every((timeslot) => !timeslot.isAvailable))\n      return <p>No available slots</p>;\n  };\n\n  return (\n    <div onClick={() => setDate(day)} className={getDayClasses()}>\n      <span>{day.value.format(dayFormat)}</span>\n      {additionalText(day)}\n    </div>\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\nconst WEEK_DAYS_IDS = [0, 1, 2, 3, 4, 5, 6];\n\nconst weekDayFormat = \"ddd\";\n\nexport const WeekDays: React.FC = () => {\n  return (\n    <>\n      {WEEK_DAYS_IDS.map((day, i) => {\n        return (\n          <span key={i}>{moment().weekday(day).format(weekDayFormat)}</span>\n        );\n      })}\n    </>\n  );\n};\n","import React, { ReactElement } from \"react\";\nimport moment, { Moment } from \"moment\";\n\ninterface MonthSelectProps {\n  currentDate: Moment;\n  setCurrentDate: (date: Moment) => void;\n  isDisabled?: boolean;\n}\n\nconst selectMonthFormat = \"MMMM YYYY\";\n\nexport const MonthSelect: React.FC<MonthSelectProps> = ({\n  currentDate,\n  setCurrentDate,\n  isDisabled,\n}) => {\n  const moveCurrentMonth = (evt: React.MouseEvent, moveTo: 1 | -1) => {\n    const newMonthDate = currentDate.clone().subtract(moveTo, \"month\");\n    setCurrentDate(newMonthDate);\n  };\n\n  const createArrowButton = (\n    direction: \"left\" | \"right\" = \"left\"\n  ): ReactElement => {\n    const toRight = direction === \"right\";\n\n    const isButtonDisabled =\n      isDisabled || (currentDate.isSame(moment(), \"month\") && !toRight);\n\n    return (\n      <button\n        onClick={(evt) => moveCurrentMonth(evt, toRight ? -1 : 1)}\n        className=\"arrowButton\"\n        disabled={isButtonDisabled}\n        type=\"button\"\n      >\n        {toRight ? \"Next\" : \"Prev\"}\n      </button>\n    );\n  };\n\n  return (\n    <>\n      {createArrowButton(\"left\")}\n      <span>{moment(currentDate).format(selectMonthFormat)}</span>\n      {createArrowButton(\"right\")}\n    </>\n  );\n};\n","export const PROFILE_IMAGE =\n  \"https://uxwing.com/wp-content/themes/uxwing/download/12-peoples-avatars/user-profile.png\";\n\nexport const PHONE_IMAGE =\n  \"https://cdn.icon-icons.com/icons2/2248/PNG/512/phone_icon_136322.png\";\n\nexport const ADDRESS_IMAGE = \"http://cdn.onlinewebfonts.com/svg/img_339206.png\";\n","import React from \"react\";\nimport { Modal, ModalProps } from \"./Modal\";\n\ninterface ConfirmModalProps extends ModalProps {\n  onConfirm: () => void;\n  description?: string;\n}\n\nconst DEFAULT_DESCRIPTION = \"Are you sure?\";\n\nexport const ConfirmModal: React.FC<ConfirmModalProps> = ({\n  onConfirm,\n  description = DEFAULT_DESCRIPTION,\n  ...modalProps\n}) => {\n  return (\n    <Modal {...modalProps} size=\"confirm\">\n      <div className=\"confirmModal\">\n        <h2>{description}</h2>\n\n        <div className=\"controls\">\n          <button onClick={modalProps.onClose} className=\"cancel\">\n            Cancel\n          </button>\n          <button onClick={onConfirm} className=\"confirm\">\n            Confirm\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { Session } from \"../../../../../../interfaces/Session\";\nimport moment from \"moment\";\nimport { DATE_FORMATS } from \"../../../../../../constants/date\";\nimport { convertDateToDefaultFormat } from \"../../../../../../helpers/dateHelpers\";\nimport {\n  ADDRESS_IMAGE,\n  PHONE_IMAGE,\n  PROFILE_IMAGE,\n} from \"../../../../../../constants/images\";\nimport { AuthContext } from \"../../../../../../App\";\nimport { ConfirmModal } from \"../../../../../../components/Modal/ConfirmModal\";\nimport { writeUserData } from \"../../../../../../services/userService\";\nimport { Loader } from \"../../../../../../components/Loader/Loader\";\nimport { updateSession } from \"../../../../../../services/sessionService\";\nimport { Link } from \"react-router-dom\";\nimport { UserForSession } from \"../../../../../../interfaces/User\";\nimport \"./currentSession.scss\";\n\ninterface CurrentSessionProps {\n  session: Session;\n  onReserve?: () => void;\n  isWithoutBooking?: boolean;\n}\n\nexport const CurrentSession: React.FC<CurrentSessionProps> = ({\n  session,\n  onReserve,\n  isWithoutBooking = false,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    name,\n    address,\n    phone,\n    endDate,\n    startDate,\n    isAvailable,\n    id: sessionId,\n  } = session;\n  const user = useContext(AuthContext);\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false);\n\n  const checkUserData = () => {\n    user?.phone\n      ? setIsConfirmModalOpen(true)\n      : alert(\"Firstly enter phone number in your profile\");\n  };\n\n  const reserveSession = async () => {\n    console.log(user);\n    if (user?.uid) {\n      setIsLoading(true);\n      await writeUserData({\n        ...user,\n        sessionsAccepted: [...(user?.sessionsAccepted || []), session],\n      });\n      await onSessionReserve({\n        name: user?.name!,\n        phone: user?.phone!,\n        id: user?.uid,\n      });\n      setIsLoading(false);\n      onReserve?.();\n    } else {\n      alert(\"Error((( try again\");\n    }\n    setIsConfirmModalOpen(false);\n  };\n\n  const onSessionReserve = async (client: UserForSession) => {\n    return await updateSession(sessionId, {\n      ...session,\n      isAvailable: false,\n      client,\n    });\n  };\n\n  const getBookingButton = () => {\n    if (isWithoutBooking) return <></>;\n\n    if (!user)\n      return (\n        <Link className=\"notAuth\" to=\"/login\">\n          Log in to reserve\n        </Link>\n      );\n\n    if (user.uid === session.ownerUid)\n      return <div className=\"notAuth\">It`s your session</div>;\n\n    return (\n      <div\n        onClick={checkUserData}\n        className={`bookButton ${isAvailable ? \"available\" : \"unavailable\"}`}\n      >\n        {isAvailable ? \"Book a session\" : \"Reserved\"}\n      </div>\n    );\n  };\n\n  if (isLoading) return <Loader />;\n\n  return (\n    <>\n      <div\n        className={`currentSession ${\n          isAvailable ? \"animateSession\" : \"unavailableSession\"\n        }`}\n      >\n        <div className=\"dateTime\">\n          <span className=\"date\">\n            {moment(startDate).format(DATE_FORMATS.DATE_FOR_SLOT)}\n          </span>\n          <span className=\"time\">{`${convertDateToDefaultFormat(\n            startDate,\n            DATE_FORMATS.DEFAULT_TIME\n          )} -\n          ${convertDateToDefaultFormat(endDate, DATE_FORMATS.DEFAULT_TIME)}\n          `}</span>\n        </div>\n\n        <div className=\"masterInfo\">\n          <h1>\n            <img src={PROFILE_IMAGE} alt=\"\" />\n            {name}\n          </h1>\n          <h2>\n            <img src={PHONE_IMAGE} alt=\"\" />\n            {phone}\n          </h2>\n        </div>\n\n        <div className=\"address\">\n          <h1 className={`${address ? \"\" : \"emptyAddress\"}`}>\n            <img src={ADDRESS_IMAGE} alt=\"\" />\n            {address || \"Get the address by phone\"}\n          </h1>\n        </div>\n\n        {getBookingButton()}\n      </div>\n\n      {isConfirmModalOpen && (\n        <ConfirmModal\n          onConfirm={reserveSession}\n          onClose={() => setIsConfirmModalOpen(false)}\n        ></ConfirmModal>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./sessions.scss\";\nimport {\n  CalendarDay,\n  generate,\n  generateWithRemoteData,\n} from \"./sessionsService\";\nimport moment, { Moment } from \"moment\";\nimport {\n  CalendarDayCell,\n  MonthSelect,\n  TimeslotTags,\n  WeekDays,\n} from \"./components\";\nimport { Session } from \"../../../../interfaces/Session\";\nimport { CurrentSession } from \"./components/CurrentSession/CurrentSession\";\n\ninterface SessionsProps {\n  sessions: Session[];\n  currentDate: Moment;\n  setCurrentDate: (date: Moment) => void;\n  onDataUpdate?: () => void;\n}\n\nconst isDisabled = false;\n// const currentDate = moment();\n\nexport const Sessions: React.FC<SessionsProps> = ({\n  sessions,\n  currentDate,\n  setCurrentDate,\n  onDataUpdate,\n}) => {\n  const [currentCalendarDay, setCurrentCalendarDay] = useState<CalendarDay>();\n  const [currentSession, setCurrentSession] = useState<Session>();\n  const calendar = sessions.length\n    ? generateWithRemoteData(currentDate, sessions)\n    : generate(currentDate);\n\n  const setDate = (day: CalendarDay) => {\n    console.log(day);\n    setCurrentCalendarDay(day);\n    setCurrentDate(moment(day.value));\n  };\n\n  useEffect(() => {\n    setCurrentSession(undefined);\n    setCurrentCalendarDay(\n      calendar.find((day) => moment(day.value).isSame(currentDate, \"day\"))\n    );\n  }, [currentDate]);\n\n  useEffect(() => {\n    setCurrentSession(undefined);\n    setCurrentCalendarDay(undefined);\n    setCurrentDate(moment());\n  }, [sessions]);\n\n  return (\n    <div className=\"timeslotSelector\">\n      <div className=\"calendar\">\n        <div className=\"calendar__monthSelect\">\n          <MonthSelect\n            currentDate={currentDate}\n            setCurrentDate={setCurrentDate}\n            isDisabled={isDisabled}\n          />\n        </div>\n        <div className=\"calendar__head calendar__grid\">{<WeekDays />}</div>\n\n        <div className=\"calendar__body calendar__grid\">\n          {calendar?.map((day, i) => {\n            return (\n              <CalendarDayCell\n                isDisabled={isDisabled}\n                isWithAvailable={true}\n                key={i}\n                day={day}\n                setDate={setDate}\n              />\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"slots\">\n        <TimeslotTags\n          isDisabled={isDisabled}\n          currentSession={currentSession}\n          setCurrentSession={setCurrentSession}\n          timeslots={currentCalendarDay?.timeslots}\n          isOnlyFreeSlots={false}\n          setIsOnlyFreeSlots={() => {}}\n        />\n\n        {currentSession && (\n          <CurrentSession onReserve={onDataUpdate} session={currentSession} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { getUsersForFilters } from \"../../../../services/userService\";\nimport Select from \"react-select\";\nimport { SelectOption } from \"../../../../interfaces/Select\";\nimport \"./filters.scss\";\n\ninterface FiltersProps {\n  selectedUsers: SelectOption[];\n  setSelectedUsers: (owners: SelectOption[]) => void;\n}\n\nexport const Filters: React.FC<FiltersProps> = ({\n  selectedUsers,\n  setSelectedUsers,\n}) => {\n  const [users, setUsers] = useState<SelectOption[]>();\n\n  useEffect(() => {\n    getUsersForFilters(setUsers);\n  }, []);\n  const onChange = (data: any) => {\n    setSelectedUsers(data);\n  };\n\n  return (\n    <div className=\"filters\">\n      {users?.length && (\n        <>\n          <p>Find time slots by Master </p>\n          <Select\n            className=\"dropdown\"\n            value={selectedUsers}\n            onChange={onChange}\n            options={users}\n            isMulti\n          />\n        </>\n      )}\n    </div>\n  );\n};\n","import { UserRoles, UserWithData } from \"../interfaces/User\";\nimport { Nullable } from \"../interfaces/HelperInterfaces\";\n\nexport const isUserAdmin = (user: Nullable<UserWithData>) => {\n  if (!user) return false;\n  return user.role === UserRoles.ADMIN;\n};\n\nexport const isUserStore = (user: Nullable<UserWithData>) => {\n  if (!user) return false;\n  return user.role === UserRoles.STORE;\n};\n\nexport const isUserCanManageSession = (user: Nullable<UserWithData>) => {\n  if (!user) return false;\n  return user.role === UserRoles.ADMIN || user.role === UserRoles.STORE;\n};\n\nexport const isUserDefault = (user: Nullable<UserWithData>) => {\n  if (!user) return false;\n  return user.role === UserRoles.DEFAULT;\n};\n","import moment from \"moment\";\nimport { DATE_FORMATS } from \"../constants/date\";\nimport { Session, SessionSchedue } from \"../interfaces/Session\";\n\nexport const getDefaultDate = (isEnd = false) => {\n  return moment()\n    .add(isEnd ? 2 : 1, \"hour\")\n    .format(DATE_FORMATS.DEFAULT_DATE_TIME);\n};\n\nexport const getArrayOfSessions = (sessionValue: SessionSchedue): Session[] => {\n  console.log(sessionValue);\n  let sessions: Session[] = [];\n  const { startTime, endTime, duration, ...otherSession } = sessionValue;\n\n  const startDateValue = moment(sessionValue.startDate).format(\n    DATE_FORMATS.DEFAULT_DATE\n  );\n\n  const startTimeMinutes = getTimeInMinutes(startTime);\n  const endTimeMinutes = getTimeInMinutes(endTime);\n\n  const workMinutesPerDay = endTimeMinutes - startTimeMinutes;\n  const sessionsPerDay = workMinutesPerDay / duration;\n\n  const daysCount =\n    moment(sessionValue.endDate).diff(moment(sessionValue.startDate), \"days\") +\n    1;\n\n  for (let i = 0; i < daysCount; i++) {\n    for (let d = 0; d < sessionsPerDay; d++) {\n      sessions.push({\n        ...otherSession,\n        startDate:\n          moment(startDateValue)\n            .add(i, \"day\")\n            .format(DATE_FORMATS.DEFAULT_DATE) +\n          \"T\" +\n          getMinutesInTime(startTimeMinutes + duration * d),\n        endDate:\n          moment(startDateValue)\n            .add(i, \"day\")\n            .format(DATE_FORMATS.DEFAULT_DATE) +\n          \"T\" +\n          getMinutesInTime(startTimeMinutes + duration * (d + 1)),\n      });\n    }\n  }\n\n  return sessions;\n};\n\nexport const getSessionsForToday = (sessions?: Session[]) => {\n  if (!sessions) return [];\n\n  return sessions?.filter((session) =>\n    moment(session.startDate).isSame(moment(), \"day\")\n  );\n};\n\nexport const getTimeInMinutes = (time: string) => {\n  const hours = Number(time.slice(0, 2));\n  const minutes = Number(time.slice(3, 5));\n\n  return hours * 60 + minutes;\n};\n\nexport const getMinutesInTime = (minutesValue: number): string => {\n  let hours = Math.round(minutesValue / 60);\n  let minutes = minutesValue % 60;\n\n  let separator = String(minutes).length < 2 ? \":0\" : \":\";\n\n  return hours + separator + minutes;\n};\n","import React, { ChangeEvent, useContext, useState } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { Session, SessionSchedue } from \"../../../../interfaces/Session\";\nimport { AuthContext } from \"../../../../App\";\nimport { Nullable } from \"../../../../interfaces/HelperInterfaces\";\nimport { RequestStatuses } from \"../../../../interfaces/RequestStatus\";\nimport moment from \"moment\";\nimport {\n  createArraySession,\n  createSession,\n} from \"../../../../services/sessionService\";\nimport { Loader } from \"../../../../components/Loader/Loader\";\nimport { CustomDatePicker } from \"../../../../components/CustomDatePicker\";\nimport { DATE_FORMATS } from \"../../../../constants/date\";\nimport {\n  getArrayOfSessions,\n  getMinutesInTime,\n  getTimeInMinutes,\n} from \"../../../../helpers/sessionHelper\";\nimport { writeUserData } from \"../../../../services/userService\";\n\ninterface CreateScheduleProps {\n  onCreate: () => void;\n}\n\nexport const CreateSchedule: React.FC<CreateScheduleProps> = ({ onCreate }) => {\n  const {\n    control,\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    getValues,\n  } = useForm<SessionSchedue>();\n  const user = useContext(AuthContext);\n  const [reqStatus, setReqStatus] = useState<Nullable<RequestStatuses>>(null);\n\n  const onStartDateChange = (date: Nullable<Date>) => {\n    if (date) setValue(\"endDate\", moment(date).add(1, \"day\").format());\n  };\n\n  const onEndDateChange = (date: Nullable<Date>) => {\n    const start = moment(getValues(\"startDate\"));\n\n    if (!(moment(date).isAfter(start) || moment(date).isSame(start, \"day\")))\n      setValue(\"startDate\", moment(date).subtract(1, \"day\").format());\n  };\n\n  const onStartTimeChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const start = event.target.value;\n    const end = getValues(\"endTime\");\n\n    if (getTimeInMinutes(start) >= getTimeInMinutes(end)) {\n      setValue(\"endTime\", getMinutesInTime(getTimeInMinutes(start) + 60));\n    }\n  };\n\n  const oneEndTimeChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const end = event.target.value;\n    const start = getValues(\"startTime\");\n\n    if (getTimeInMinutes(start) >= getTimeInMinutes(end)) {\n      setValue(\"startTime\", getMinutesInTime(getTimeInMinutes(end) - 60));\n    }\n  };\n\n  const onSubmit: SubmitHandler<SessionSchedue> = async (data) => {\n    if (user) {\n      setReqStatus(RequestStatuses.PENDING);\n      try {\n        const sessionSchedule = {\n          ...data,\n          isAvailable: true,\n          ownerUid: user?.uid!,\n        };\n        const arrayOfSessions = getArrayOfSessions(sessionSchedule);\n\n        await createArraySession(arrayOfSessions);\n        await writeUserData({\n          ...user,\n          sessionsCreated: [\n            ...(user?.sessionsCreated || []),\n            ...arrayOfSessions,\n          ],\n        });\n        setReqStatus(RequestStatuses.SUCCESS);\n        onCreate();\n      } catch (err) {\n        alert(err);\n        setReqStatus(RequestStatuses.FAILED);\n      }\n    }\n  };\n\n  return (\n    <form className=\"createSessionForm\" onSubmit={handleSubmit(onSubmit)}>\n      {reqStatus === RequestStatuses.PENDING ? (\n        <Loader />\n      ) : (\n        <>\n          <div className=\"field\">\n            <p>Name</p>\n            <input\n              defaultValue={user?.name}\n              {...register(\"name\", { required: true })}\n            />\n            {errors.name && <span>This field is required</span>}\n            <br />\n          </div>\n\n          <div className=\"field\">\n            <p>Phone</p>\n            <input\n              defaultValue={user?.phone}\n              {...register(\"phone\", { required: true })}\n            />\n            {errors.phone && <span>This field is required</span>}\n          </div>\n\n          <div className=\"field\">\n            <p>Adress</p>\n            <input\n              defaultValue={user?.address}\n              {...register(\"address\", { required: true })}\n            />\n            {errors.address && <span>This field is required</span>}\n          </div>\n\n          <div className=\"field\">\n            <p>Start of working day</p>\n            <input\n              type=\"time\"\n              defaultValue={\"10:00\"}\n              {...register(\"startTime\", { required: true })}\n              onChange={onStartTimeChange}\n            />\n            {errors.startTime && <span>This field is required</span>}\n          </div>\n\n          <div className=\"field\">\n            <p>End of working day</p>\n            <input\n              type=\"time\"\n              defaultValue={\"18:00\"}\n              {...register(\"endTime\", { required: true })}\n              onChange={oneEndTimeChange}\n            />\n            {errors.endTime && <span>This field is required</span>}\n          </div>\n\n          <div className=\"field\">\n            <p>Session duration (minutes)</p>\n            <input\n              type=\"number\"\n              defaultValue={60}\n              {...register(\"duration\", {\n                required: {\n                  value: true,\n                  message: \"This field is required\",\n                },\n                min: {\n                  value: 30,\n                  message: \"Min value - 30 minutes\",\n                },\n                max: {\n                  value: 180,\n                  message: \"Max value - 180 minutes\",\n                },\n              })}\n            />\n            <span>{errors.duration?.message}</span>\n          </div>\n\n          <div className=\"field\">\n            <p>Start Date</p>\n            <CustomDatePicker\n              defaultValue={moment()}\n              dateFormat={DATE_FORMATS.DATE_FOR_SCHEDULE}\n              onChange={() => {}}\n              showTimeSelect={false}\n              name=\"startDate\"\n              control={control}\n              onChangeData={onStartDateChange}\n            />\n            {errors.endDate && <span>This field is required</span>}\n          </div>\n          <div className=\"field\">\n            <p>End Date</p>\n            <CustomDatePicker\n              defaultValue={moment().add(1, \"day\")}\n              dateFormat={DATE_FORMATS.DATE_FOR_SCHEDULE}\n              onChange={() => {}}\n              showTimeSelect={false}\n              name=\"endDate\"\n              control={control}\n              onChangeData={onEndDateChange}\n            />\n            {errors.endDate && <span>This field is required</span>}\n          </div>\n\n          <input className=\"submitButton\" type=\"submit\" />\n        </>\n      )}\n    </form>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { CreateSession } from \"./components/CreateSession/CreateSession\";\nimport { getSessionsByOwners } from \"../../services/sessionService\";\nimport { Session } from \"../../interfaces/Session\";\nimport { Modal } from \"../../components/Modal/Modal\";\nimport { Sessions } from \"./components/Sessions/Sessions\";\nimport moment, { Moment } from \"moment\";\nimport { Filters } from \"./components/Filters/Filters\";\nimport { SelectOption } from \"../../interfaces/Select\";\nimport { AuthContext } from \"../../App\";\nimport { isUserCanManageSession } from \"../../helpers/userHelpers\";\nimport { CreateSchedule } from \"./components/CreateSchedule/CreateSchedule\";\nimport { Loader } from \"../../components/Loader/Loader\";\n\nexport const SessionsPage: React.FC = () => {\n  const user = useContext(AuthContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [sessions, setSessions] = useState<Session[]>([]);\n  const [currentDate, setCurrentDate] = useState<Moment>(moment());\n  const [selectedOwners, setSelectedOwners] = useState<SelectOption[]>([]);\n  const [isCreateSessionModalOpen, setIsCreateSessionModalOpen] =\n    useState(false);\n  const [isCreateScheduleModalOpen, setIsCreateScheduleModalOpen] =\n    useState(false);\n\n  const getSession = async () => {\n    setIsLoading(true);\n    const formattedOwners = selectedOwners.map(({ value }) => value);\n    const data = await getSessionsByOwners(formattedOwners);\n    setSessions(data);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getSession();\n  }, [selectedOwners]);\n\n  const onSessionCreate = () => {\n    getSession();\n    setIsCreateSessionModalOpen(false);\n  };\n\n  const onScheduleCreate = () => {\n    getSession();\n    setIsCreateScheduleModalOpen(false);\n  };\n\n  return (\n    <div>\n      {isCreateSessionModalOpen && (\n        <Modal\n          onClose={() => setIsCreateSessionModalOpen(false)}\n          title=\"Create Session\"\n        >\n          <CreateSession onCreate={onSessionCreate} />\n        </Modal>\n      )}\n\n      {isCreateScheduleModalOpen && (\n        <Modal\n          onClose={() => setIsCreateScheduleModalOpen(false)}\n          title=\"Create Schedule\"\n        >\n          <CreateSchedule onCreate={onScheduleCreate} />\n        </Modal>\n      )}\n      {isUserCanManageSession(user) && (\n        <>\n          <button onClick={() => setIsCreateSessionModalOpen(true)}>\n            Create separate session\n          </button>\n          <br />\n          <button onClick={() => setIsCreateScheduleModalOpen(true)}>\n            Create schedule of sessions\n          </button>\n        </>\n      )}\n\n      <Filters\n        selectedUsers={selectedOwners}\n        setSelectedUsers={setSelectedOwners}\n      />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Sessions\n          sessions={sessions}\n          currentDate={currentDate}\n          setCurrentDate={setCurrentDate}\n          onDataUpdate={getSession}\n        />\n      )}\n    </div>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { writeUserData } from \"../services/userService\";\nimport { Loader } from \"../components/Loader/Loader\";\nimport { useForm } from \"react-hook-form\";\nimport { User, UserRoles, UserWithData } from \"../interfaces/User\";\nimport { Modal } from \"../components/Modal/Modal\";\nimport { Form } from \"../components/Auth/Form\";\nimport { createUserWithEmailAndPassword, getAuth } from \"firebase/auth\";\nimport { AuthContext } from \"../App\";\nimport { getSessionsByOwnersAndDay } from \"../services/sessionService\";\nimport { Session } from \"../interfaces/Session\";\nimport { TimeslotTags } from \"./SessionPage/components/Sessions/components\";\nimport { CurrentSession } from \"./SessionPage/components/Sessions/components/CurrentSession/CurrentSession\";\nimport moment from \"moment\";\nimport { getSessionsForToday } from \"../helpers/sessionHelper\";\nimport { REG_EXP } from \"../constants/RegExps\";\n\ninterface ProfilePageProps {}\n\nexport const ProfilePage: React.FC<ProfilePageProps> = ({}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<UserWithData>();\n  const user = useContext(AuthContext);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isUserDataLoading, setIsUserDataLoading] = useState<boolean>(false);\n  const [isCreatingLoading, setCreatingLoading] = useState<boolean>(false);\n  const [isSessionsForTodayShown, setIsSessionsForTodayShown] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentSession, setCurrentSession] = useState<Session>();\n\n  const isAdmin = user?.role === UserRoles.ADMIN;\n  const isStore = user?.role === UserRoles.STORE;\n\n  const currentSessions = isStore\n    ? user?.sessionsCreated?.filter((session) => !session.isAvailable)\n    : user?.sessionsAccepted;\n\n  console.log(user);\n\n  const onSubmit = async (data: UserWithData) => {\n    try {\n      if (user?.email && user.uid) {\n        setIsUserDataLoading(true);\n        await writeUserData({ ...user, ...data });\n        setIsUserDataLoading(false);\n        setIsEditing(false);\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const onNewStoreCreate = (data: User) => {\n    const auth = getAuth();\n    setCreatingLoading(true);\n    createUserWithEmailAndPassword(auth, data.email, data.password)\n      .then(({ user }) => {\n        console.log(user);\n\n        writeUserData({\n          email: user.email!,\n          uid: user.uid,\n          role: \"store\",\n        });\n\n        alert(\"New store successfully created\");\n      })\n      .catch(console.error)\n      .finally(() => {\n        setIsCreateModalOpen(false);\n        setCreatingLoading(false);\n      });\n  };\n\n  const getCurrentDataDisplay = () => {\n    if (!user) return <></>;\n\n    return isEditing ? (\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"field\">\n          <p>Name:</p>\n          <input {...register(\"name\")} defaultValue={user.name} />\n        </div>\n        <div className=\"field\">\n          <p>Phone:</p>\n          <input\n            {...register(\"phone\", {\n              pattern: {\n                value: REG_EXP.phone,\n                message: \"Invalid phone number\",\n              },\n            })}\n            defaultValue={user.phone}\n          />\n          <span>{errors.phone?.message}</span>\n        </div>\n        <div className=\"field\">\n          <p>Address:</p>\n          <input {...register(\"address\")} defaultValue={user.address} />\n        </div>\n        <input className=\"submitButton\" type=\"submit\" />\n      </form>\n    ) : (\n      <div className=\"profileInfo\">\n        <p>Email: {user.email}</p>\n        <p>Name: {user.name}</p>\n        <p>Phone: {user.phone}</p>\n        <p>Address: {user.address}</p>\n        <p>Role: {user.role}</p>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <button onClick={() => setIsEditing(!isEditing)}>\n        {isEditing ? \"Cancel editing\" : \"Change info\"}\n      </button>\n\n      {isUserDataLoading ? <Loader /> : getCurrentDataDisplay()}\n\n      {isAdmin && (\n        <>\n          <button onClick={() => setIsCreateModalOpen(true)}>\n            Create new store\n          </button>\n          {isCreateModalOpen && (\n            <Modal\n              isLoading={isCreatingLoading}\n              onClose={() => setIsCreateModalOpen(false)}\n            >\n              <Form handleClick={onNewStoreCreate} />\n            </Modal>\n          )}\n        </>\n      )}\n\n      <button\n        onClick={() => setIsSessionsForTodayShown(!isSessionsForTodayShown)}\n      >\n        {isSessionsForTodayShown ? \"Hide sessions\" : \"Show Sessions for today\"}\n      </button>\n\n      {isSessionsForTodayShown && (\n        <>\n          {getSessionsForToday(currentSessions)?.length > 0 ? (\n            <>\n              <div className=\"userSessions\">\n                Sessions for today:\n                <TimeslotTags\n                  timeslots={getSessionsForToday(currentSessions)}\n                  isOnlyFreeSlots={false}\n                  currentSession={currentSession}\n                  setCurrentSession={setCurrentSession}\n                  setIsOnlyFreeSlots={() => {}}\n                />\n              </div>\n\n              {currentSession && (\n                <CurrentSession isWithoutBooking session={currentSession} />\n              )}\n            </>\n          ) : (\n            <>You have not sessions for today</>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\nimport { useAuth } from \"../hooks/useAuth\";\n\nconst REDIRECT_PATH = \"/login\";\n\ninterface PrivateRouteProps extends RouteProps {\n  component: any;\n}\n\nexport const PrivateRoute: React.FC<PrivateRouteProps> = ({\n  component: Component,\n  ...rest\n}) => {\n  const { isAuth } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) =>\n        isAuth ? (\n          <Component {...routeProps} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: REDIRECT_PATH,\n              state: { from: routeProps.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\ninterface MenuProps {}\n\nexport const Menu: React.FC<MenuProps> = ({}) => {\n  const location = useLocation();\n  const { isAuth } = useAuth();\n\n  const routes = [\n    {\n      route: \"/\",\n      title: \"Home\",\n      isSensitive: true,\n    },\n    {\n      route: \"/sessions\",\n      title: \"Sessions\",\n      isSensitive: false,\n    },\n    {\n      route: \"/profile\",\n      title: \"Profile\",\n      isSensitive: true,\n    },\n  ];\n\n  const filteredRoutes = routes.filter(\n    ({ isSensitive }) => !isSensitive || isAuth\n  );\n\n  const getSliderBarClasses = () => {\n    const path = location.pathname;\n    if (path === \"/\" || (path === \"/sessions\" && !isAuth)) return \"first\";\n    if (path === \"/sessions\") return \"second\";\n    if (path === \"/profile\") return \"third\";\n    return \"none\";\n  };\n\n  console.log(location.pathname);\n\n  return (\n    <div className=\"menu\">\n      {filteredRoutes.map(({ route, title }, index, array) => {\n        return (\n          <React.Fragment key={index}>\n            <Link\n              className={`link ${location.pathname === route ? \"active\" : \"\"}`}\n              to={route}\n            >\n              {title}\n            </Link>\n            {index !== array.length - 1 && <div className=\"separator\"></div>}\n          </React.Fragment>\n        );\n      })}\n      <div className={`slider-bar ${getSliderBarClasses()}`}></div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useAppDispatch } from \"../../hooks/reduxHooks\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { removeUser } from \"../../store/slices/userSlice\";\nimport { getUserData } from \"../../services/userService\";\nimport { UserRoles, UserWithData } from \"../../interfaces/User\";\nimport { AuthContext } from \"../../App\";\nimport { PROFILE_IMAGE } from \"../../constants/images\";\n\ninterface ProfileSectionProps {}\n\nexport const ProfileSection: React.FC<ProfileSectionProps> = ({}) => {\n  const location = useLocation();\n  const dispatch = useAppDispatch();\n  const userData = useContext(AuthContext);\n\n  const logOut = () => {\n    dispatch(removeUser());\n    location.pathname = \"/login\";\n  };\n\n  return (\n    <div className=\"profileSection\">\n      {userData ? (\n        <>\n          <Link className=\"profileLink\" to=\"/profile\">\n            <img src={PROFILE_IMAGE} alt=\"\" />\n          </Link>\n          <div className=\"authButton logout\">\n            <p onClick={logOut}>Log Out</p>\n          </div>\n          <div className=\"authButton name\">\n            <p>\n              {userData?.name || \" - \"}\n              <span>({userData?.role})</span>\n            </p>\n          </div>\n        </>\n      ) : (\n        <Link className=\"authButton\" to=\"/login\">\n          Sign In\n        </Link>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./header.scss\";\nimport { Menu } from \"./Menu\";\nimport { ProfileSection } from \"./ProfileSection\";\n\ninterface HeaderProps {}\n\nexport const Header: React.FC<HeaderProps> = ({}) => {\n  return (\n    <div className=\"header\">\n      <div className=\"title\">Aseev</div>\n      <Menu />\n      <ProfileSection />\n    </div>\n  );\n};\n","import { Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"./pages/HomePage\";\nimport { LoginPage } from \"./pages/LoginPage\";\nimport { RegisterPage } from \"./pages/RegisterPage\";\nimport { SessionsPage } from \"./pages/SessionPage/SessionsPage\";\nimport { ProfilePage } from \"./pages/ProfilePage\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { PrivateRoute } from \"./components/PrivateRoute\";\nimport { Header } from \"./components/Layout/Header\";\nimport { UserWithData } from \"./interfaces/User\";\nimport { getUserData } from \"./services/userService\";\nimport { useAuth } from \"./hooks/useAuth\";\nimport { Nullable } from \"./interfaces/HelperInterfaces\";\n\nexport const AuthContext = createContext<Nullable<UserWithData>>(null);\n\nfunction App() {\n  const { id } = useAuth();\n  const [userData, setUserData] = useState<Nullable<UserWithData>>(null);\n\n  useEffect(() => {\n    id ? getUserData(id, setUserData) : setUserData(null);\n  }, [id]);\n\n  return (\n    <AuthContext.Provider value={userData}>\n      <Header />\n\n      <div className=\"content\">\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={HomePage} />\n          <PrivateRoute exact path=\"/profile\" component={ProfilePage} />\n\n          <Route exact path=\"/sessions\" component={SessionsPage} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/register\" component={RegisterPage} />\n        </Switch>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import {configureStore} from '@reduxjs/toolkit';\nimport userReducer from './slices/userSlice';\nimport storage from 'redux-persist/lib/storage'\nimport {combineReducers} from \"redux\";\nimport { persistReducer } from 'redux-persist'\nimport thunk from 'redux-thunk'\n\nconst reducers = combineReducers({\n    userReducer\n});\n\nconst persistConfig = {\n    key: 'root',\n    storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    // devTools: process.env.NODE_ENV !== 'production',\n    middleware: [thunk]\n});\n\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { store } from \"./store\";\nimport \"./firebase\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}